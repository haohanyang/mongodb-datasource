# Docker Compose file for dev

services:
  grafana:
    user: root
    container_name: mongodb-datasource-grafana
    build:
      context: ./.config
      args:
        grafana_image: ${GRAFANA_IMAGE:-grafana}
        grafana_version: ${GRAFANA_VERSION:-11.2.0}
        development: ${DEVELOPMENT:-false}
    ports:
      - 3000:3000/tcp
      - 2345:2345/tcp # delve
    security_opt:
      - 'apparmor:unconfined'
      - 'seccomp:unconfined'
    cap_add:
      - SYS_PTRACE
    volumes:
      - ./dist:/var/lib/grafana/plugins/haohanyang-mongodb-datasource
      - ./provisioning:/etc/grafana/provisioning
      - .:/root/haohanyang-mongodb-datasource

    environment:
      NODE_ENV: development
      GF_LOG_FILTERS: plugin.haohanyang-mongodb-datasource:debug
      GF_LOG_LEVEL: debug
      GF_DATAPROXY_LOGGING: 1
      GF_PLUGINS_ALLOW_LOADING_UNSIGNED_PLUGINS: haohanyang-mongodb-datasource
    networks:
      - mongodb-datasource

  mongo:
    image: mongo
    container_name: mongodb-datasource-mongo
    command: [--replSet, rs0]
    ports:
      - 27017:27017
    healthcheck:
      test: echo "try { rs.status() } catch (err) { rs.initiate({_id:'rs0',members:[{_id:0, host:'mongo:27017'}]}) }" | mongosh --port 27017 --quiet
      interval: 10s
      timeout: 20s
      start_period: 0s
      start_interval: 1s
      retries: 10
    networks:
      - mongodb-datasource

  compass:
    image: haohanyang/compass-web
    container_name: mongodb-datasource-compass
    ports:
      - 8080:8080
    networks:
      - mongodb-datasource

networks:
  mongodb-datasource:
    driver: bridge
